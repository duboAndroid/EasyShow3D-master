apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.dyman.show3dmodel"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 2
        versionName "1.6.1.170915"
        jackOptions {
            enabled true
        }
    }

    signingConfigs {
        release {
            keyAlias 'EasyShow3D-master'
            keyPassword '11111111'
            storeFile file('EasyShow3D-master.keystore')
            storePassword '11111111'
        }
    }

    //调用配置文件
    getSigningProperties()

    buildTypes {
        /*release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }*/
        debug {
            minifyEnabled false
            zipAlignEnabled false
            //shrinkResources false
            //signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false //混淆
            zipAlignEnabled true //Zipalign优化
            //shrinkResources true // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //注意要添加签名
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            pseudoLocalesEnabled true
            renderscriptDebuggable true
            //自定义apk名字
            /*applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFileName = new File(output.outputFile.parent, output.outputFile.name.replace("app-release.apk", "Your_name.apk")) } }*/
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    /*output.outputFile = new File(
                            output.outputFile.parent,
                            "应用前缀${variant.buildType.name}-${defaultConfig.versionName}-${releaseTime()}.apk".toLowerCase())*/

                    if (outputFile != null && outputFile.name.endsWith('.apk') && 'release'.equals(variant.buildType.name)) {
                        def fileName = outputFile.name.replace("${variant.flavorName}", "V${defaultConfig.versionName}-${variant.flavorName}")
                        fileName = fileName.replace('.apk', "-${buildTime()}.apk")
                        output.outputFile = new File(outputFile.parent, fileName)
                    }

                    /*if (!variant.buildType.isDebuggable()) {
                        //获取签名的名字 variant.signingConfig.name
                        //要被替换的源字符串
                        def sourceFile = "-${variant.flavorName}-${variant.buildType.name}"
                        //替换的字符串
                        def replaceFile = "_V${variant.versionName}_${variant.flavorName}_${variant.buildType.name}_${releaseTime()}"
                        outputFileName = output.outputFile.name.replace(sourceFile, replaceFile);
                        //遗留问题：如何获取当前module的name，如CodeBooke这个名字怎么获取到
                    }*/
                }
            }
        }
    }
}

// 当前beta版本号
ext.build_number = "beta1";
// 显示的时间格式，形如20170710
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getDefault());
}

//读取签名配置文件 这个需要放在android{}外面
def getSigningProperties(){
    def propFile = file('signing.properties')
    if (propFile.canRead()){
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    }else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.hanuor.onyx:onyx:1.1.4'
    compile 'com.baoyz.swipemenulistview:library:1.3.0'
    compile project(':easyshow3d')
    //compile 'com.github.DymanZy:EasyShow3D:1.1'
}
